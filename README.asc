= Kinetic, a process runner
------------

Runs processes on a schedule and monitors results.

Allows authenticated remote execution of pre-defined jobs.

Written to coordinate data processing tasks.

This is mostly intended to run in user space.

image::screenshot.png[Screenshot]

== Usage:

== Installation:

After downloading the binary from the releases page and storing in your `$HOME/bin` directory

`kin install`

to install a user service that will schedule jobs.


== Configuration file:

Any .toml file in `~/.pm_dir` will be loaded. Example config.toml:

[toml]
----
[print-output]
schedule="0 13 * * *"
command="python -c 'print(\"hello\");raise Exception(\"2\")'"

[hello]
command="echo hello"
----

== Dev:

=== Building:

After cloning repo, installing dev and application `requirements.txt`
`install.sh` will build the application and distribute it to your home/bin directory.

Run particular job by name
`kin run <jobname>`




=== error modes:



=== messaging


=== uptimerobot integration


== Alternatives:


* Cron (obviously!)
* anacron
* Cronitor - email and status service, keep using cron jobs.
* Python Scheduler, APScheduler
* systemd timers
* jobflow, jobflow remote
* AWS Lambda, Step Functions and EventBridge
    ** immense fun and basically free for small tasks, watch out for storage and bandwidth
* Julia Oxygen, TaskSchedule.jl
* Ray - Remote actors
* Rufus Scheduler
* Crystal Tasker
* Rust scheduler
* airflow et. al
